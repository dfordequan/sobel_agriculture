import os
import cv2
import numpy as np
import matplotlib.pyplot as plt


im1_folder = '/Users/dequanou/Developer/orbital_eye/reduce_false/test/im1/' #before image folder
im2_folder = '/Users/dequanou/Developer/orbital_eye/reduce_false/test/im2/' #after image folder

mask_folder = '/Users/dequanou/Developer/orbital_eye/reduce_false/test/change_mask/' #changes mask folder

im1_sobel_folder = '/Users/dequanou/Developer/orbital_eye/reduce_false/test/im1_sobel/' #before image sobel folder (generated by sobel_filter.py)
im2_sobel_folder = '/Users/dequanou/Developer/orbital_eye/reduce_false/test/im2_sobel/' #after image sobel folder (generated by sobel_filter.py)

output_folder = '/Users/dequanou/Developer/orbital_eye/reduce_false/test/sobel_results/'

if not os.path.exists(output_folder):
    os.makedirs(output_folder)

for image_name in os.listdir(im1_folder):
    print(image_name)
    if image_name == '.DS_Store':
        continue
    image1 = cv2.imread(im1_folder + image_name)
    image2 = cv2.imread(im2_folder + image_name)
    image1_sobel = cv2.imread(im1_sobel_folder + image_name)
    image2_sobel = cv2.imread(im2_sobel_folder + image_name)
    mask = cv2.imread(mask_folder + image_name)

    # sobel difference
    sobel_diff = cv2.absdiff(image1_sobel, image2_sobel)
    sobel_diff = cv2.cvtColor(sobel_diff, cv2.COLOR_BGR2GRAY)
        
    # concatenate images
    # first concatenate the original images side by side
    im1_im2 = np.hstack((image1, image2))
    # then concatenate the sobel images side by side
    im1_sobel_im2_sobel = np.hstack((image1_sobel, image2_sobel))
    # concatenate the two concatenated images vertically
    final_image = np.vstack((im1_im2, im1_sobel_im2_sobel))
    # firstr concatenate the sobel difference image on the bottom of the mask
    sobel_diff = cv2.cvtColor(sobel_diff, cv2.COLOR_GRAY2BGR)
    sobel_concat = np.vstack((mask, sobel_diff))
    # concatenate the sobel difference image to the final image on the right
    final_image = np.hstack((final_image, sobel_concat))
    
    # save the final image
    cv2.imwrite(output_folder + image_name, final_image)

